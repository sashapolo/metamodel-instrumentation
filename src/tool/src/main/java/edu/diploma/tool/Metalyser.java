/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package edu.diploma.tool;

import com.mxgraph.view.mxGraph;
import edu.diploma.metamodel.TranslationUnit;
import edu.diploma.tool.visitors.CfgDrawVisitor;
import edu.diploma.visitors.Visitor;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.simpleframework.xml.Serializer;
import org.simpleframework.xml.core.Persister;

/**
 *
 * @author alexander
 */
public class Metalyser extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form Metalyser
     */
    public Metalyser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        javax.swing.JMenuBar jMenuBar1 = new javax.swing.JMenuBar();
        final javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem openMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenuItem closeMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu viewMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metalyser");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 500));

        drawPanel.setName(""); // NOI18N
        drawPanel.setPreferredSize(new java.awt.Dimension(800, 500));
        drawPanel.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(drawPanel);

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        openMenuItem.setToolTipText("");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        jMenuBar1.add(fileMenu);

        viewMenu.setText("View");
        viewMenu.setToolTipText("");

        cfgMenuItem.setText("Control Flow Graph");
        cfgMenuItem.setToolTipText("");
        cfgMenuItem.setEnabled(false);
        cfgMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cfgMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(cfgMenuItem);

        foldGraphMenuItem.setText("Fold graph");
        foldGraphMenuItem.setEnabled(false);
        foldGraphMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foldGraphMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(foldGraphMenuItem);

        jMenuBar1.add(viewMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        final JFileChooser chooser = new JFileChooser();
        int res = chooser.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            final Serializer serializer = new Persister();
            final File file = chooser.getSelectedFile();
            try {
                metamodel = serializer.read(TranslationUnit.class, file);
                JOptionPane.showMessageDialog(
                        this, 
                        "Metamodel successfully imported", 
                        "Success!", 
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        this, 
                        "Error while loading the metamodel (see the log for more details)", 
                        "Error!", 
                        JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Metalyser.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
            }
        }
        cfgMenuItem.setEnabled(true);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void cfgMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cfgMenuItemActionPerformed
        final CfgDrawVisitor v = new CfgDrawVisitor(drawPanel);
        v.dispatch(metamodel);
        graph = v.getGraph();
        foldGraphMenuItem.setEnabled(true);
        
    }//GEN-LAST:event_cfgMenuItemActionPerformed

    private void foldGraphMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foldGraphMenuItemActionPerformed
        graph.foldCells(true, true, graph.getChildVertices(graph.getDefaultParent()));
    }//GEN-LAST:event_foldGraphMenuItemActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Metalyser().setVisible(true);
            }
        });
    }

    private TranslationUnit metamodel;
    private mxGraph graph;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JMenuItem cfgMenuItem = new javax.swing.JMenuItem();
    private final javax.swing.JPanel drawPanel = new javax.swing.JPanel();
    private final javax.swing.JMenuItem foldGraphMenuItem = new javax.swing.JMenuItem();
    // End of variables declaration//GEN-END:variables
}
